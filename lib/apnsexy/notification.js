// Generated by CoffeeScript 1.4.0
(function() {
  var Notification;

  module.exports = Notification = (function() {

    function Notification() {
      this.alert = void 0;
      this.badge = void 0;
      this.device = void 0;
      this.encoding = 'utf8';
      this.expiry = 0;
      this.identifier = 0;
      this.newsstandAvailable = void 0;
      this.payload = {};
      this.sound = void 0;
    }

    Notification.prototype.data = function() {
      var data, message, message_length, position, token;
      data = void 0;
      message = JSON.stringify(this);
      message_length = Buffer.byteLength(message, this.encoding);
      position = 0;
      token = new Buffer(this.device.replace(/\s/g, ""), "hex");
      data = new Buffer(1 + 4 + 4 + 2 + token.length + 2 + message_length);
      data[position] = 1;
      position++;
      data.writeUInt32BE(this._uid, position);
      position += 4;
      data.writeUInt32BE(this.expiry, position);
      position += 4;
      data.writeUInt16BE(token.length, position);
      position += 2;
      position += token.copy(data, position, 0);
      data.writeUInt16BE(message_length, position);
      position += 2;
      position += data.write(message, position, this.encoding);
      return data;
    };

    Notification.prototype.length = function() {
      return Buffer.byteLength(JSON.stringify(this), this.encoding || 'utf8');
    };

    Notification.prototype.toJSON = function() {
      var _base;
      this.payload || (this.payload = {});
      (_base = this.payload).aps || (_base.aps = {});
      if (this.badge != null) {
        this.payload.aps.badge = this.badge;
      }
      if (this.sound != null) {
        this.payload.aps.sound = this.sound;
      }
      if (this.alert != null) {
        this.payload.aps.alert = this.alert;
      }
      if (this.tag != null) {
        this.payload.tag = this.tag;
      }
      if (this.a != null) {
        this.payload.a = this.a;
      }
      if (this.newsstandAvailable != null) {
        this.payload.aps["content-available"] = 1;
      }
      return this.payload;
    };

    return Notification;

  })();

}).call(this);
